.include "constants.z80"
.include "macros-dict.z80"
.include "macros-stack.z80"
.include "macros-testing.z80"
.include "macros-util.z80"

.org START_ROM
RST00:                                      ; Reset
di                                      ; Disable interrupts
jp start

.org $0038
RST38:                                      ; rst 38
jp serialIn

.include "core-compiler.z80"
.include "core-control.z80"
.include "core-defs.z80"
.include "core-find.z80"
.include "core-format.z80"
.include "core-input.z80"
.include "core-interp.z80"
.include "core-kernel.z80"
.include "core-logic.z80"
.include "core-math.z80"
.include "core-memory.z80"
.include "core-misc.z80"
.include "core-parse.z80"
.include "core-print.z80"
.include "core-serial.z80"
.include "core-stack.z80"
.include "core-string.z80"

CODE "ok", 0, OK
    _printString "OK"
    ret

initialLatest:
dw backLink

start:
ld SP, RET_STACK                        ; Initialise the return stack.
call initInput
call initSerial
call initKernel

