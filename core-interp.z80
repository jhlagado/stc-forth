repl:
    ld DE, dataStack
    jp interpret

interpret:
    _push $20                       ; str maxlen delim
    call word                       ; c-addr                 
    call dup                        ; c-addr c-addr
    call cat                        ; c-addr len
    call isZero                     ; c-addr
    jr z,interpret2                 
    _fetch state
    call isZero
    jr z,interpret1                 ; c-addr
    call compileWord      
    jr interpret
interpret1:
    call interpWord                 
    jr interpret
interpret2:
    call drop                       
    ret
    
interpWord:                         
    call dup                        ; c-addr c-addr
    call find                       ; c-addr xt result
    call isZero                     ; c-addr xt
    jr z,interpNum
    call nip                        ; xt
executeWord:
    call execute                    ; ?
    ret

compileWord:
    call dup                        ; c-addr c-addr
    call find                       ; c-addr xt result
    call dup                        ; c-addr xt result result
    call isZero                     ; c-addr xt result
    jr z,compileNum
    _onep                           ; c-addr xt result+1 ; is it -1?
    call isZero                     ; c-addr xt 
    call nip                        ; xt    
    jr z,executeWord
    call callc    
    ret

interpNum:
    call drop                       ; c-addr
    call count                      ; str len
    call toNumber                   ; num err
    call isZero
    ret z
interpError:
    call drop                       ; --
    _printString "NOT FOUND!\r\n"
    ret

compileNum:
    call drop                       ; c-addr xt 
    call drop                       ; c-addr
    call count                      ; str len    
    call toNumber                   ; num err
    call isZero
    jr nz,interpError
    call literal
    ret
    
    